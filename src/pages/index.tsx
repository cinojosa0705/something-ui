import styles from "./index.module.css";
import type { NextPage } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";

interface Stat {
  serverName: string;
  userName: string;
  amount: number;
  side: string;
}

interface AggregatedStat {
  serverName: string;
  userName: string;
  yoloVolume: number;
  noloVolume: number;
  totalVolume: number;
}

const Home: NextPage = () => {
  const [aggregatedData, setAggregatedData] = useState<AggregatedStat[]>([]);
  
  useEffect(() => {
    const fetchData = async () => {
      const response = await fetch("/api/getStats");
      const json = (await response.json()) as Stat[];
  
      const aggregated: { [key: string]: AggregatedStat } = {};
  
      json.forEach((item) => {
        const key = `${item.serverName}_${item.userName}`;
  
        if (!aggregated[key]) {
          aggregated[key] = {
            serverName: item.serverName,
            userName: item.userName,
            yoloVolume: 0,
            noloVolume: 0,
            totalVolume: 0,
          };
        }
  
        if (item.side === 'yolo') {
          (aggregated[key] as AggregatedStat).yoloVolume += item.amount;
        } else if (item.side === 'nolo') {
          (aggregated[key] as AggregatedStat).noloVolume += item.amount;
        }
        
        (aggregated[key] as AggregatedStat).totalVolume += item.amount;
      });
  
      setAggregatedData(Object.values(aggregated));
    };
  
    void fetchData();
  
    const intervalId = setInterval(() => {
      localStorage.clear();
      void fetchData();
    }, 1000);
  
    return () => clearInterval(intervalId);
  }, []);
  
  

  return (
    <>
      <Head>
        <title>YoloNolo Stats</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.container}>
          <h1 className={styles.title}>YoloNolo Stats</h1>
          <table className={styles.table}>
            <thead>
              <tr>
                <th>Server Name</th>
                <th>User Name</th>
                <th>Yolo Volume</th>
                <th>Nolo Volume</th>
                <th>Total Volume</th>
              </tr>
            </thead>
            <tbody>
              {aggregatedData.map((item, index) => (
                <tr key={index}>
                  <td>{item.serverName}</td>
                  <td>{item.userName}</td>
                  <td>{item.yoloVolume}</td>
                  <td>{item.noloVolume}</td>
                  <td className={styles.totalVolume}>{item.totalVolume}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </main>
    </>
  );
};

export default Home;
